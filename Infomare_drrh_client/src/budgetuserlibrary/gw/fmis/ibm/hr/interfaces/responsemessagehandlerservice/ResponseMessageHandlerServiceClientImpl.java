package budgetuserlibrary.gw.fmis.ibm.hr.interfaces.responsemessagehandlerservice;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import hr.ibm.fmis.gw.comm.DistributionManagementLibrary.messages.AnyTypeList;
import hr.infomare.drrh.dao.BcitemlstDAO;
import hr.infomare.drrh.dao.BudcomDAO;
import hr.infomare.drrh.dao.BudcommsgDAO;
import hr.infomare.drrh.dao.DocheadDAO;
import hr.infomare.drrh.dao.NotifheadDAO;
import hr.infomare.drrh.dao.ReqmsgDAO;
import hr.infomare.drrh.dao.StatnotifDAO;
import hr.infomare.drrh.dao.VendorVeznaDAO;
import hr.infomare.drrh.hibernate.SessionPomocna;
import hr.infomare.drrh.pojo.Budcom;
import hr.infomare.drrh.pojo.Budcommsg;
import hr.infomare.drrh.pojo.Dochead;
import hr.infomare.drrh.pojo.Notifhead;
import hr.infomare.drrh.pojo.Reqmsg;
import hr.infomare.drrh.pojo.Resmsg;
import hr.infomare.drrh.pojo.Statnotif;
import hr.infomare.drrh.pomocni.Debug;
import hr.infomare.drrh.pomocni.Log;
import hr.infomare.drrh.pomocni.Pomocna;
import hr.infomare.drrh.pomocni.PomocnaDatum;
import hr.infomare.drrh.pomocni.PomocnaError;
import hr.infomare.drrh.pomocni.PomocnaKlijent;
import hr.infomare.drrh.postavke.Postavke;

import java.net.URL;
import java.util.Iterator;
import java.util.List;

import javax.xml.namespace.QName;

import org.hibernate.Session;

import budgetuserlibrary.gw.fmis.ibm.hr.infotypes.BudgetCommitmentStatusNotification;
import budgetuserlibrary.gw.fmis.ibm.hr.infotypes.BudgetCommitmentStatusType;
import budgetuserlibrary.gw.fmis.ibm.hr.infotypes.ErrorResponse;
import budgetuserlibrary.gw.fmis.ibm.hr.infotypes.MessageHeader;
import budgetuserlibrary.gw.fmis.ibm.hr.infotypes.ResponseMessageType;
import budgetuserlibrary.gw.fmis.ibm.hr.interfaces.responsemessagehandlerservice.binding2.ResponseMessageHandlerServiceExportResponseMessageHandlerServiceHttpService;
import budgetuserlibrary.gw.fmis.ibm.hr.messages.ContractResponseMsg;
import budgetuserlibrary.gw.fmis.ibm.hr.messages.ReservationResponseMsg;

/**
 * This class was generated by Apache CXF 2.4.0 2011-12-05T12:37:56.862+01:00
 * Generated source version: 2.4.0
 * 
 */
public class ResponseMessageHandlerServiceClientImpl {
	private QName serviceName;
	private URL wsdlURL = ResponseMessageHandlerServiceExportResponseMessageHandlerServiceHttpService.WSDL_LOCATION;
	private ResponseMessageHandlerServiceExportResponseMessageHandlerServiceHttpService servis;
	private ResponseMessageHandlerService port;
	private SessionPomocna sessionPomocna;
	private Session session;
	private BudcommsgDAO budcomMsgDAO;
	private BcitemlstDAO bctItemLstDAO;
	private DocheadDAO docHeadDAO;
	private ReqmsgDAO reqMsgDAO;
	private VendorVeznaDAO vendorVeznaDAO;
	private StatnotifDAO statusNotifDAO;
	private NotifheadDAO notifHeadDAO;
	private BudcomDAO budComDAO;
	private Debug debug = new Debug("Response");

	public ResponseMessageHandlerServiceClientImpl() {
	}

	public void razmjenaOdgovora() {
		try {
			otvoriPortISesiju();
			// preuzmiContractResponseMessageId();
			preuzmiReservationResponseMessageId();

		} catch (Exception e) {
			Log.loger.severe("Greška kod razmjene odgovora "
					+ PomocnaError.getErrorMessage(e));
		}
	}

	private void otvoriPortISesiju() {
		serviceName = new QName(
				ResponseMessageHandlerServiceExportResponseMessageHandlerServiceHttpService.TARGET_NAMESPACE,
				ResponseMessageHandlerServiceExportResponseMessageHandlerServiceHttpService.SERVIS);
		wsdlURL = ResponseMessageHandlerServiceExportResponseMessageHandlerServiceHttpService.WSDL_LOCATION;
		servis = new ResponseMessageHandlerServiceExportResponseMessageHandlerServiceHttpService(
				wsdlURL, serviceName);
		port = servis
				.getResponseMessageHandlerServiceExportResponseMessageHandlerServiceHttpPort();
		PomocnaKlijent.postavkeKlijenta(port);
		sessionPomocna = new SessionPomocna();
		session = sessionPomocna.getSession();
		budcomMsgDAO = new BudcommsgDAO(session);
		bctItemLstDAO = new BcitemlstDAO(session);
		docHeadDAO = new DocheadDAO(session);
		reqMsgDAO = new ReqmsgDAO(session);
		statusNotifDAO = new StatnotifDAO(session);
		notifHeadDAO = new NotifheadDAO(session);
		vendorVeznaDAO = new VendorVeznaDAO(session);
		budComDAO = new BudcomDAO(session);
	}

	private void obradaBudComMsg(AnyTypeList anyTypeLista, String messageName) {
		Integer reqMsgId = reqMsgDAO.getIduciRbr();
		Integer statNotId = statusNotifDAO.getIduciRbr();
		Integer notHeadId = notifHeadDAO.getIduciRbr();
		Budcommsg budComMsg = null;
		Reqmsg reqMsg = null;
		Resmsg resMsg = null;
		Statnotif statNotif = null;
		Budcom budCom = null;
		Notifhead notifHead = null;
		Dochead docHead = null;
		MessageHeader messageHeader = null;
		ResponseMessageType responseMessageType = null;
		BudgetCommitmentStatusNotification budgetCommitmentStatusNotification = null;
		ErrorResponse errorResponse = null;
		List responseLista = anyTypeLista.getAnyTypeElement();
		for (Iterator iterator = responseLista.iterator(); iterator.hasNext();) {
			Object object = iterator.next();
			if (object instanceof ContractResponseMsg) {
				ContractResponseMsg response = (ContractResponseMsg) object;
				messageHeader = response.getMessageHeader();
				responseMessageType = response.getResponseMessageType();
				budgetCommitmentStatusNotification = response
						.getNotificationResponse();
				errorResponse = response.getErrorResponse();
			}

			if (object instanceof ReservationResponseMsg) {
				ReservationResponseMsg response = (ReservationResponseMsg) object;
				messageHeader = response.getMessageHeader();
				responseMessageType = response.getResponseMessageType();
				budgetCommitmentStatusNotification = response
						.getNotificationResponse();
				errorResponse = response.getErrorResponse();
			}

			try {
				budComMsg = budcomMsgDAO
						.getBudcommsgByDocumentId(budgetCommitmentStatusNotification
								.getHeader().getOriginatingBuFmisDocumentID());
				if (budComMsg != null) {
					sessionPomocna.otvoriTransakciju();
					messageHeader.postaviVrijednosti();
					reqMsg = new Reqmsg();
					resMsg = new Resmsg();
					resMsg.postaviVrijednosti(messageHeader, messageName,
							responseMessageType);
					reqMsg.postaviVrijednosti(messageHeader, reqMsgId,
							messageName);					
					budComMsg.postaviVrijednosti(Pomocna
							.getStatusRetrive(responseMessageType), reqMsg,
							PomocnaDatum.XMLDatumUDate(messageHeader
									.getSubmitionTimestamp()),
							budgetCommitmentStatusNotification);
					if (responseMessageType
							.equals(ResponseMessageType.NOTIFICATION)) {						
						docHead = docHeadDAO.getDocHeadByPK(budComMsg
								.getRefdocid());
						statNotif = new Statnotif();
						notifHead = new Notifhead();
						budComMsg
								.setStatnotty(budgetCommitmentStatusNotification
										.getCommitmentStatus().name());
						statNotif.postaviVrijednosti(statNotId, resMsg,
								messageName, budgetCommitmentStatusNotification
										.getCommitmentStatus(), messageHeader);
						notifHead.postaviVrijednosti(notHeadId, statNotId,
								resMsg, messageHeader,
								budgetCommitmentStatusNotification.getHeader(),
								budgetCommitmentStatusNotification);						
						budCom = budComDAO.getBudcomByPK(budComMsg.getCurlib(),
								budComMsg.getR95upr(), budComMsg.getR95god(),
								budComMsg.getR95rbr());
						if(budCom==null){							
							budCom=new Budcom();
						}
						budCom.postaviVrijednosti(budComMsg, notHeadId,
								statNotId, budgetCommitmentStatusNotification
										.getHeader(),
								budgetCommitmentStatusNotification
										.getCommitmentStatus(), resMsg);												
						docHead.postaviVrijednosti(
								budgetCommitmentStatusNotification.getHeader(),
								messageHeader);						
					}
					session.save(resMsg);
					session.save(reqMsg);
					session.update(budComMsg);
					if (responseMessageType
							.equals(ResponseMessageType.NOTIFICATION)) {
						session.save(statNotif);
						session.save(notifHead);
						session.saveOrUpdate(budCom);
						session.update(docHead);
					}
					Pomocna.obradaGresaka(session, errorResponse, messageHeader);
					sessionPomocna.commitTransakcije();
					++reqMsgId;
					++statNotId;
					++notHeadId;
				}
			} catch (Exception e) {
				sessionPomocna.rollbackTransakcije();
				Log.loger
						.severe("Greška kod preuzimanja odgovora ugovora, poruka: "
								+ Integer.toString(budComMsg.getBcmsgid())
								+ PomocnaError.getErrorMessage(e)
								+ "--"
								+ messageHeader.getResponseMsgId());
			}

			finally {
				/*
				 * try { ResxmlDAO.spremiResponse(response.getMessageHeader()
				 * .getResponseMsgId(), response, session, sessionPomocna); }
				 */
			}
		}

	}

	public void preuzmiContractResponse() {
		obradaBudComMsg(
				(AnyTypeList) port
						.getContractResponseList(Postavke.LOGICAL_SYSTEM_NAME),
				"retriveContract");
	}

	public void preuzmiContractResponseMessageId() {
		obradaBudComMsg(
				(AnyTypeList) port.getContractResponseListStartingWithMessageId(
						Postavke.LOGICAL_SYSTEM_NAME, Long.valueOf(0)),
				"retriveContractMessageId");
	}

	public void preuzmiReservationResponse() {
		obradaBudComMsg(
				(AnyTypeList) port
						.getReservationResponseList(Postavke.LOGICAL_SYSTEM_NAME),
				"retriveResponse");
	}

	public void preuzmiReservationResponseMessageId() {
		obradaBudComMsg(
				(AnyTypeList) port.getReservationResponseListStartingWithMessageId(
						Postavke.LOGICAL_SYSTEM_NAME, Long.valueOf(0)),
				"retriveResponseMessageId");
	}

	/*
	 * 
	 * 
	 * {
	 * System.out.println("Invoking getPaymentExecutionListStartingWithMessageId..."
	 * ); java.lang.String
	 * _getPaymentExecutionListStartingWithMessageId_logicalSystemName =
	 * "_getPaymentExecutionListStartingWithMessageId_logicalSystemName848007126"
	 * ; java.lang.Long _getPaymentExecutionListStartingWithMessageId_messageId
	 * = Long.valueOf(2259185400731745442l); java.lang.Object
	 * _getPaymentExecutionListStartingWithMessageId__return =
	 * port.getPaymentExecutionListStartingWithMessageId
	 * (_getPaymentExecutionListStartingWithMessageId_logicalSystemName,
	 * _getPaymentExecutionListStartingWithMessageId_messageId);
	 * System.out.println("getPaymentExecutionListStartingWithMessageId.result="
	 * + _getPaymentExecutionListStartingWithMessageId__return);
	 * 
	 * 
	 * } { System.out.println(
	 * "Invoking getPurchaseOrderResponseListStartingWithMessageId...");
	 * java.lang.String
	 * _getPurchaseOrderResponseListStartingWithMessageId_logicalSystemName =
	 * "_getPurchaseOrderResponseListStartingWithMessageId_logicalSystemName1882240435"
	 * ; java.lang.Long
	 * _getPurchaseOrderResponseListStartingWithMessageId_messageId =
	 * Long.valueOf(3285879925812762154l); java.lang.Object
	 * _getPurchaseOrderResponseListStartingWithMessageId__return =
	 * port.getPurchaseOrderResponseListStartingWithMessageId
	 * (_getPurchaseOrderResponseListStartingWithMessageId_logicalSystemName,
	 * _getPurchaseOrderResponseListStartingWithMessageId_messageId);
	 * System.out.
	 * println("getPurchaseOrderResponseListStartingWithMessageId.result=" +
	 * _getPurchaseOrderResponseListStartingWithMessageId__return);
	 * 
	 * 
	 * } {
	 * System.out.println("Invoking getVendorUpdatesListStartingWithMessageId..."
	 * ); java.lang.String
	 * _getVendorUpdatesListStartingWithMessageId_logicalSystemName =
	 * "_getVendorUpdatesListStartingWithMessageId_logicalSystemName-1736969764"
	 * ; java.lang.Long _getVendorUpdatesListStartingWithMessageId_messageId =
	 * Long.valueOf(1572614188513467936l); java.lang.Object
	 * _getVendorUpdatesListStartingWithMessageId__return =
	 * port.getVendorUpdatesListStartingWithMessageId
	 * (_getVendorUpdatesListStartingWithMessageId_logicalSystemName,
	 * _getVendorUpdatesListStartingWithMessageId_messageId);
	 * System.out.println("getVendorUpdatesListStartingWithMessageId.result=" +
	 * _getVendorUpdatesListStartingWithMessageId__return);
	 * 
	 * 
	 * } { System.out.println("Invoking getBankUpdatesList...");
	 * java.lang.String _getBankUpdatesList_logicalSystemName =
	 * "_getBankUpdatesList_logicalSystemName1390253176"; java.lang.Object
	 * _getBankUpdatesList__return =
	 * port.getBankUpdatesList(_getBankUpdatesList_logicalSystemName);
	 * System.out.println("getBankUpdatesList.result=" +
	 * _getBankUpdatesList__return);
	 * 
	 * 
	 * } {
	 * System.out.println("Invoking getBankUpdatesListStartingWithMessageId..."
	 * ); java.lang.String
	 * _getBankUpdatesListStartingWithMessageId_logicalSystemName =
	 * "_getBankUpdatesListStartingWithMessageId_logicalSystemName-809029705";
	 * java.lang.Long _getBankUpdatesListStartingWithMessageId_messageId =
	 * Long.valueOf(7976208711176604334l); java.lang.Object
	 * _getBankUpdatesListStartingWithMessageId__return =
	 * port.getBankUpdatesListStartingWithMessageId
	 * (_getBankUpdatesListStartingWithMessageId_logicalSystemName,
	 * _getBankUpdatesListStartingWithMessageId_messageId);
	 * System.out.println("getBankUpdatesListStartingWithMessageId.result=" +
	 * _getBankUpdatesListStartingWithMessageId__return);
	 * 
	 * 
	 * } { System.out.println("Invoking getVendorUpdatesList...");
	 * java.lang.String _getVendorUpdatesList_logicalSystemName =
	 * "_getVendorUpdatesList_logicalSystemName1474709840"; java.lang.Object
	 * _getVendorUpdatesList__return =
	 * port.getVendorUpdatesList(_getVendorUpdatesList_logicalSystemName);
	 * System.out.println("getVendorUpdatesList.result=" +
	 * _getVendorUpdatesList__return);
	 * 
	 * 
	 * } { System.out.println("Invoking getInvoiceResponseList...");
	 * java.lang.String _getInvoiceResponseList_logicalSystemName =
	 * "_getInvoiceResponseList_logicalSystemName-1340223544"; java.lang.Object
	 * _getInvoiceResponseList__return =
	 * port.getInvoiceResponseList(_getInvoiceResponseList_logicalSystemName);
	 * System.out.println("getInvoiceResponseList.result=" +
	 * _getInvoiceResponseList__return);
	 * 
	 * 
	 * } { System.out.println("Invoking getAllResponseList...");
	 * java.lang.String _getAllResponseList_logicalSystemName =
	 * "_getAllResponseList_logicalSystemName-972104159"; java.lang.Object
	 * _getAllResponseList__return =
	 * port.getAllResponseList(_getAllResponseList_logicalSystemName);
	 * System.out.println("getAllResponseList.result=" +
	 * _getAllResponseList__return);
	 * 
	 * 
	 * } {
	 * System.out.println("Invoking getInvoiceResponseListStartingWithMessageId..."
	 * ); java.lang.String
	 * _getInvoiceResponseListStartingWithMessageId_logicalSystemName =
	 * "_getInvoiceResponseListStartingWithMessageId_logicalSystemName1221341342"
	 * ; java.lang.Long _getInvoiceResponseListStartingWithMessageId_messageId =
	 * Long.valueOf(187458634149059774l); java.lang.Object
	 * _getInvoiceResponseListStartingWithMessageId__return =
	 * port.getInvoiceResponseListStartingWithMessageId
	 * (_getInvoiceResponseListStartingWithMessageId_logicalSystemName,
	 * _getInvoiceResponseListStartingWithMessageId_messageId);
	 * System.out.println("getInvoiceResponseListStartingWithMessageId.result="
	 * + _getInvoiceResponseListStartingWithMessageId__return);
	 * 
	 * 
	 * }
	 * 
	 * { System.out.println("Invoking getPurchaseOrderResponseList...");
	 * java.lang.String _getPurchaseOrderResponseList_logicalSystemName =
	 * "_getPurchaseOrderResponseList_logicalSystemName1186393356";
	 * java.lang.Object _getPurchaseOrderResponseList__return =
	 * port.getPurchaseOrderResponseList
	 * (_getPurchaseOrderResponseList_logicalSystemName);
	 * System.out.println("getPurchaseOrderResponseList.result=" +
	 * _getPurchaseOrderResponseList__return);
	 * 
	 * 
	 * } { System.out.println("Invoking getPaymentExecutionList...");
	 * java.lang.String _getPaymentExecutionList_logicalSystemName =
	 * "_getPaymentExecutionList_logicalSystemName-743724591"; java.lang.Object
	 * _getPaymentExecutionList__return =
	 * port.getPaymentExecutionList(_getPaymentExecutionList_logicalSystemName);
	 * System.out.println("getPaymentExecutionList.result=" +
	 * _getPaymentExecutionList__return);
	 * 
	 * 
	 * } {
	 * System.out.println("Invoking getAllResponseListStartingWithMessageId..."
	 * ); java.lang.String
	 * _getAllResponseListStartingWithMessageId_logicalSystemName =
	 * "_getAllResponseListStartingWithMessageId_logicalSystemName314994187";
	 * java.lang.Long _getAllResponseListStartingWithMessageId_messageId =
	 * Long.valueOf(-4192823889397524263l); java.lang.Object
	 * _getAllResponseListStartingWithMessageId__return =
	 * port.getAllResponseListStartingWithMessageId
	 * (_getAllResponseListStartingWithMessageId_logicalSystemName,
	 * _getAllResponseListStartingWithMessageId_messageId);
	 * System.out.println("getAllResponseListStartingWithMessageId.result=" +
	 * _getAllResponseListStartingWithMessageId__return);
	 * 
	 * 
	 * }
	 */

}
