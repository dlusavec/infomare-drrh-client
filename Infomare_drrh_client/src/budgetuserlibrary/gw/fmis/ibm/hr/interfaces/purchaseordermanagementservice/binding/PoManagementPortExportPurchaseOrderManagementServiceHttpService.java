
/*
 * 
 */

package budgetuserlibrary.gw.fmis.ibm.hr.interfaces.purchaseordermanagementservice.binding;

import hr.infomare.drrh.pomocni.Log;
import hr.infomare.drrh.pomocni.PomocnaError;
import hr.infomare.drrh.pomocni.PomocnaWSDL;
import hr.infomare.drrh.postavke.Postavke;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import budgetuserlibrary.gw.fmis.ibm.hr.interfaces.purchaseordermanagementservice.PurchaseOrderManagementService;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.4.0
 * 2011-10-18T09:28:46.700+02:00
 * Generated source version: 2.4.0
 * 
 */


@WebServiceClient(name = "poManagementPortExport_PurchaseOrderManagementServiceHttpService", 
                  wsdlLocation = "http://localhost:8080/Infomare_drrh_web_services/services/poManagementPortExport_PurchaseOrderManagementServiceHttpPort?wsdl",
                  targetNamespace = "http://hr.ibm.fmis.gw.BudgetUserLibrary/interfaces/PurchaseOrderManagementService/Binding") 
public class PoManagementPortExportPurchaseOrderManagementServiceHttpService extends Service {
	public static String TARGET_NAMESPACE;
	public static String SERVIS;
	public static String PORT;

	
    public final static URL WSDL_LOCATION;

    public  static QName SERVICE;
    public  static QName poManagementPortExportPurchaseOrderManagementServiceHttpPort;
    static {
    	PomocnaWSDL.locirajWebServis(Postavke.WSDL_PURCHASE_ORDER);
		TARGET_NAMESPACE = PomocnaWSDL.TARGET_NAMESPACE;
		SERVIS = PomocnaWSDL.SERVIS;		
		PORT = PomocnaWSDL.PORT;	
		
		SERVICE = new QName(TARGET_NAMESPACE, SERVIS);
		poManagementPortExportPurchaseOrderManagementServiceHttpPort = new QName(
				TARGET_NAMESPACE, PORT);
        URL url = null;
        try {
        	url = new URL(Postavke.WSDL_PURCHASE_ORDER);
        } catch (MalformedURLException e) {
        	Log.loger.severe(PomocnaError.getErrorMessage(e));
        }
        WSDL_LOCATION = url;
    }

    public PoManagementPortExportPurchaseOrderManagementServiceHttpService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public PoManagementPortExportPurchaseOrderManagementServiceHttpService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public PoManagementPortExportPurchaseOrderManagementServiceHttpService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     * 
     * @return
     *     returns PurchaseOrderManagementService
     */
    @WebEndpoint(name = "poManagementPortExport_PurchaseOrderManagementServiceHttpPort")
    public PurchaseOrderManagementService getPoManagementPortExportPurchaseOrderManagementServiceHttpPort() {
        return super.getPort(poManagementPortExportPurchaseOrderManagementServiceHttpPort, PurchaseOrderManagementService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PurchaseOrderManagementService
     */
    @WebEndpoint(name = "poManagementPortExport_PurchaseOrderManagementServiceHttpPort")
    public PurchaseOrderManagementService getPoManagementPortExportPurchaseOrderManagementServiceHttpPort(WebServiceFeature... features) {
        return super.getPort(poManagementPortExportPurchaseOrderManagementServiceHttpPort, PurchaseOrderManagementService.class, features);
    }

}
