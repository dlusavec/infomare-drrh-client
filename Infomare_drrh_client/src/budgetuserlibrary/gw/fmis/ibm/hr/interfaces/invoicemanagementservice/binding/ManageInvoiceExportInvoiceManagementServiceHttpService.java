
/*
 * 
 */

package budgetuserlibrary.gw.fmis.ibm.hr.interfaces.invoicemanagementservice.binding;

import hr.infomare.drrh.pomocni.Log;
import hr.infomare.drrh.pomocni.PomocnaError;
import hr.infomare.drrh.pomocni.PomocnaWSDL;
import hr.infomare.drrh.postavke.Postavke;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import budgetuserlibrary.gw.fmis.ibm.hr.interfaces.invoicemanagementservice.InvoiceManagementService;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.4.0
 * 2013-03-27T08:50:55.720+01:00
 * Generated source version: 2.4.0
 * 
 */

@WebServiceClient(name = "manageInvoiceExport_InvoiceManagementServiceHttpService", 
                  wsdlLocation = "http://localhost:8080/Infomare_drrh_web_services/services/manageInvoiceExport_InvoiceManagementServiceHttpPort?wsdl",
                  targetNamespace = "http://hr.ibm.fmis.gw.BudgetUserLibrary/interfaces/InvoiceManagementService/Binding")
public class ManageInvoiceExportInvoiceManagementServiceHttpService extends
		Service {
	public static String TARGET_NAMESPACE;
	public static String SERVIS;
	public static String PORT;
	
	public static URL WSDL_LOCATION;

	public static QName SERVICE;
	
	public final static QName ManageInvoiceExportInvoiceManagementServiceHttpPort = new QName("http://hr.ibm.fmis.gw.BudgetUserLibrary/interfaces/InvoiceManagementService/Binding", "manageInvoiceExport_InvoiceManagementServiceHttpPort");
	public static QName manageInvoiceExportInvoiceManagementServiceHttpPort;
	static {
		PomocnaWSDL.locirajWebServis(Postavke.WSDL_INVOICE);
		TARGET_NAMESPACE = PomocnaWSDL.TARGET_NAMESPACE;
		SERVIS = PomocnaWSDL.SERVIS;
		PORT = PomocnaWSDL.PORT;

		SERVICE = new QName(TARGET_NAMESPACE, SERVIS);
		manageInvoiceExportInvoiceManagementServiceHttpPort = new QName(
				TARGET_NAMESPACE, PORT);
		URL url = null;
		try {
			url = new URL(Postavke.WSDL_INVOICE);
		} catch (MalformedURLException e) {
			Log.loger.severe(PomocnaError.getErrorMessage(e));
		}
		WSDL_LOCATION = url;
	}

	public ManageInvoiceExportInvoiceManagementServiceHttpService(
			URL wsdlLocation) {
		super(wsdlLocation, SERVICE);
	}

	public ManageInvoiceExportInvoiceManagementServiceHttpService(
			URL wsdlLocation, QName serviceName) {
		super(wsdlLocation, serviceName);
	}

	public ManageInvoiceExportInvoiceManagementServiceHttpService() {
		super(WSDL_LOCATION, SERVICE);
	}

	/**
     * 
     * @return
     *     returns InvoiceManagementService
     */
	@WebEndpoint(name = "manageInvoiceExport_InvoiceManagementServiceHttpPort")
	public InvoiceManagementService getManageInvoiceExportInvoiceManagementServiceHttpPort() {
		return super.getPort(
				manageInvoiceExportInvoiceManagementServiceHttpPort,
				InvoiceManagementService.class);
	}

	/**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns InvoiceManagementService
     */
	@WebEndpoint(name = "manageInvoiceExport_InvoiceManagementServiceHttpPort")
	public InvoiceManagementService getManageInvoiceExportInvoiceManagementServiceHttpPort(
			WebServiceFeature... features) {
		return super.getPort(
				manageInvoiceExportInvoiceManagementServiceHttpPort,
				InvoiceManagementService.class, features);
	}

}
