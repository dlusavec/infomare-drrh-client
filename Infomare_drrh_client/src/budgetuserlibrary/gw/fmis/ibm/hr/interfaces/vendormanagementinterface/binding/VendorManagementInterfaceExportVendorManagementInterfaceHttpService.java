/*
 * 
 */

package budgetuserlibrary.gw.fmis.ibm.hr.interfaces.vendormanagementinterface.binding;

import hr.infomare.drrh.pomocni.Log;
import hr.infomare.drrh.pomocni.PomocnaError;
import hr.infomare.drrh.pomocni.PomocnaWSDL;
import hr.infomare.drrh.postavke.Postavke;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

import budgetuserlibrary.gw.fmis.ibm.hr.interfaces.vendormanagementinterface.VendorManagementInterface;

/**
 * This class was generated by Apache CXF 2.4.0 2011-06-20T14:59:33.381+02:00
 * Generated source version: 2.4.0
 * 
 */

@WebServiceClient(name = "VendorManagementInterfaceExport_VendorManagementInterfaceHttpService", targetNamespace = "http://hr.ibm.fmis.gw.BudgetUserLibrary/interfaces/VendorManagementInterface/Binding")
public class VendorManagementInterfaceExportVendorManagementInterfaceHttpService
		extends Service {

	public static String TARGET_NAMESPACE;
	public static String SERVIS;
	public static String PORT;

	public static URL WSDL_LOCATION;
	public static QName SERVICE;
	public static QName VendorManagementInterfaceExportVendorManagementInterfaceHttpPort;
	static {
		PomocnaWSDL.locirajWebServis(Postavke.WSDL_VENDOR);
		TARGET_NAMESPACE = PomocnaWSDL.TARGET_NAMESPACE;
		SERVIS = PomocnaWSDL.SERVIS;
		PORT = PomocnaWSDL.PORT;
		SERVICE = new QName(TARGET_NAMESPACE, SERVIS);
		VendorManagementInterfaceExportVendorManagementInterfaceHttpPort = new QName(
				TARGET_NAMESPACE, PORT);
		URL url = null;
		try {
			url = new URL(Postavke.WSDL_VENDOR);
		} catch (MalformedURLException e) {
			Log.loger.severe(PomocnaError.getErrorMessage(e));
		}
		WSDL_LOCATION = url;
	}

	public VendorManagementInterfaceExportVendorManagementInterfaceHttpService(
			URL wsdlLocation) {
		super(wsdlLocation, SERVICE);
	}

	public VendorManagementInterfaceExportVendorManagementInterfaceHttpService(
			URL wsdlLocation, QName serviceName) {
		super(wsdlLocation, serviceName);
	}

	public VendorManagementInterfaceExportVendorManagementInterfaceHttpService() {
		super(WSDL_LOCATION, SERVICE);
	}

	/**
	 * 
	 * @return returns VendorManagementInterface
	 */
	@WebEndpoint(name = "VendorManagementInterfaceExport_VendorManagementInterfaceHttpPort")
	public VendorManagementInterface getVendorManagementInterfaceExportVendorManagementInterfaceHttpPort() {
		return super
				.getPort(
						VendorManagementInterfaceExportVendorManagementInterfaceHttpPort,
						VendorManagementInterface.class);
	}

	/**
	 * 
	 * @param features
	 *            A list of {@link javax.xml.ws.WebServiceFeature} to configure
	 *            on the proxy. Supported features not in the
	 *            <code>features</code> parameter will have their default
	 *            values.
	 * @return returns VendorManagementInterface
	 */
	@WebEndpoint(name = "VendorManagementInterfaceExport_VendorManagementInterfaceHttpPort")
	public VendorManagementInterface getVendorManagementInterfaceExportVendorManagementInterfaceHttpPort(
			WebServiceFeature... features) {
		return super
				.getPort(
						VendorManagementInterfaceExportVendorManagementInterfaceHttpPort,
						VendorManagementInterface.class, features);
	}

}
